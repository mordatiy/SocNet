{"version":3,"file":"static/js/732.807c856d.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogsItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/AddMessageForm/AddMessageForm.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx","webpack://my-app/./src/Components/common/FormsControls/FormsConrols.module.css?5f12","Components/common/FormsControls/FormsConrols.js","Components/utils/validators/validators.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__k1pxG\",\"dialogsItems\":\"Dialogs_dialogsItems__rEyS1\",\"dialog\":\"Dialogs_dialog__nEFRk\",\"visited\":\"Dialogs_visited__Cx+Z4\",\"active\":\"Dialogs_active__GTnQL\",\"message\":\"Dialogs_message__hAp-7\"};","import c from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={c.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsItem;","import c from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={c.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport form from \"redux-form/lib/Form\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsConrols\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form action=\"\" onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {/*<Field component=\"textarea\" placeholder={\"Enter below\"} name=\"newMessageBody\"  />*/}\r\n                <Field\r\n                    component={Textarea}\r\n                    name=\"newMessageBody\"\r\n                    placeholder={\"Enter text here\"}\r\n                    validate={[ required, maxLength10 ]} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from 'react';\r\nimport c from './Dialogs.module.css'\r\nimport DialogsItem from \"./DialogsItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {maxLengthCreator, required} from \"../utils/validators/validators\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    // console.log(props);\r\n    // console.log('Dialogs')\r\n\r\n    let dialogsElements = props.dialogsPage.dialogsData.map( dialog => (<DialogsItem key={dialog.id} id={dialog.id} name={dialog.name}></DialogsItem>));\r\n    let messagesElements = props.dialogsPage.messagesData.map( message => (<Message key={message.id} message={message.message}></Message>));\r\n\r\n    //console.log(dialogsElements)\r\n\r\n    // if (props.isAuth === false) return <Navigate to=\"/login/\" replace={true} />\r\n    const addNewMessage = (formData) => {\r\n        //console.log(\"AddMessageForm formData: \", formData.newMessageForm)\r\n        props.sendMessage(formData.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={c.dialogs}>\r\n                <div className={c.dialogsItems}>\r\n                    { dialogsElements }\r\n                </div>\r\n                <div className={c.messages}>\r\n                    <div>{ messagesElements }</div>\r\n                    <AddMessageForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const AddMessageForm = (props) => {\r\n//     return (\r\n//         <form action=\"\" onSubmit={props.handleSubmit}>\r\n//             <div>\r\n//                 {/*<Field component=\"textarea\" placeholder={\"Enter below\"} name=\"newMessageBody\"  />*/}\r\n//                 <Field\r\n//                     component={Textarea}\r\n//                     name=\"newMessageBody\"\r\n//                     placeholder={\"Enter text here\"}\r\n//                     validate={[ required, maxLength10 ]} />\r\n//             </div>\r\n//             <div>\r\n//                 <button>Send</button>\r\n//             </div>\r\n//         </form>\r\n//     )\r\n// }\r\n//\r\n// const AddMessageFormRedux = reduxForm({\r\n//     form: 'dialogAddMessageForm'\r\n// })(AddMessageForm);\r\n\r\nexport default Dialogs;","import c from './Dialogs.module.css'\r\nimport DialogsItem from \"./DialogsItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {addMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport DialogsTest from \"./DialogsTest\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getUserProfile} from \"../../redux/profile-reducer\";\r\n\r\n// console.log('DialogsContainer')\r\n\r\nlet mapStateToProps = (state) => {\r\n    // console.log('mapStateToProps')\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    // console.log('mapDispatchToProps')\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(addMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsConrols_formControl__eFBBh\",\"error\":\"FormsConrols_error__ZlvlZ\"};","import React from 'react';\r\nimport styles from './FormsConrols.module.css'\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + ( hasError ? styles.error : \"\") }>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + ( hasError ? styles.error : \"\") }>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            component={component}\r\n            type=\"text\"\r\n            validate={validators}\r\n            {...props}\r\n        />{text}\r\n    </div>\r\n)","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLength30 = value => {\r\n    if (value.length > 30) return \"Max Length is 30 symblos\";\r\n    return undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    // console.log(maxLength, value.length);\r\n    if (value.length > maxLength) return `Max Length is ${maxLength} symblos`;\r\n    return undefined;\r\n}\r\n\r\n","import React, {Component} from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsToRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login/\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsToRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","path","id","_jsx","className","c","dialog","children","NavLink","to","name","message","maxLength10","maxLengthCreator","reduxForm","form","_jsxs","action","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsElements","dialogsPage","dialogsData","map","DialogsItem","messagesElements","messagesData","Message","dialogs","dialogsItems","messages","AddMessageForm","formData","sendMessage","newMessageBody","compose","connect","state","dispatch","addMessageCreator","withAuthRedirect","Dialogs","_ref","input","meta","hasError","touched","error","styles","Input","_ref2","createField","validators","arguments","length","undefined","text","type","value","maxLength","concat","mapStateToPropsToRedirect","isAuth","auth","Component","RedirectComponent","React","render","this","Navigate"],"sourceRoot":""}