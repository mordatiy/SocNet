{"version":3,"file":"static/js/801.20eed233.chunk.js","mappings":"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","sources":["Components/Login/Login.jsx","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/ProfileInfo/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/Components/Profile/MyPosts/MyPosts.module.css?bd90","webpack://my-app/./src/Components/Profile/MyPosts/Post/Post.module.css?54ab","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","webpack://my-app/./src/Components/common/FormsControls/FormsConrols.module.css?5f12","Components/common/FormsControls/FormsConrols.js","Components/utils/validators/validators.js","hoc/withAuthRedirect.js"],"sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsConrols\";\r\nimport {required} from \"../utils/validators/validators\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form action=\"\" onSubmit={props.handleSubmit}>\r\n            {createField(\"Email\", \"email\", [ required ], Input, {type: \"text\"}, \"\")}\r\n            {createField(\"Password\", \"password\", [ required ], Input, {type: \"password\"}, \"\")}\r\n            {createField(\"\", \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me!\")}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        // console.log(\"formData: \", formData)\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n\r\n    }\r\n    if (props.isAuth) {\r\n        return <Navigate to={\"/profile/\"} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n\r\n}\r\n\r\n/* trash * /\r\n\r\n */\r\nlet mapStateToProps = (state) => {\r\n    // console.log('mapStateToProps')\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nconst LoginContainer = connect(mapStateToProps, {login})(Login)\r\n/* end trash * /\r\n */\r\n\r\nexport default LoginContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__CqTdw\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // debugger;\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status,\r\n            })\r\n        }\r\n        // let a = this.state;\r\n        // let b = this.props;\r\n        console.log(\"componentDidUpdate\");\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        //console.log(\"this:\", this)\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        console.warn(e.currentTarget.value)\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"render\");\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode } >{this.props.status}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input autoFocus={true}\r\n                               onChange={ this.onStatusChange}\r\n                               onBlur={ this.deactivateEditMode }\r\n                               value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        // console.warn(e.currentTarget.value)\r\n        setStatus (e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode } >{props.status}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={ true }\r\n                           onChange={ onStatusChange }\r\n                           onBlur={ deactivateEditMode }\r\n                           value={ status }\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport c from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, ...props}) => {\r\n    // console.log(props.profile);\r\n\r\n    if (!profile) {\r\n        return (<Preloader />)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/*<div>*/}\r\n            {/*    <img src=\"https://t4.ftcdn.net/jpg/04/41/59/09/360_F_441590967_3RrToA4APjnNIUFXTgm8YzAsb2TsoXbo.jpg\" alt=\"\"/>*/}\r\n            {/*</div>*/}\r\n            <div className={c.descriptionBlock}>\r\n                <img src={profile.photos.small} alt=\"\"/>\r\n                <h2>{profile.fullName}</h2>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__z0Q9A\",\"posts\":\"MyPosts_posts__PzbLX\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__oFbwf\"};","import c from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    // console.log(props.message)\r\n    return (\r\n        <div className={c.item}>\r\n            <img src=\"https://w7.pngwing.com/pngs/85/114/png-transparent-avatar-user-profile-male-logo-profile-icon-hand-monochrome-head.png\" alt=\"\"/>\r\n            <div>\r\n                {props.message}\r\n            </div>\r\n            <div>\r\n                <span>likes</span>\r\n                <span>{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport c from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport form from \"redux-form/lib/Form\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsConrols\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    // console.log(\"render ds\");\r\n    // console.log(props.postsData)\r\n\r\n    let postsElements = [...props.postsData].reverse().map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    const onAddPost = (formData) => {\r\n        props.addPost(formData.newPostBody)\r\n    }\r\n\r\n    return (\r\n        <div className={c.postsBlock}>\r\n\r\n            <AddPostFormRedux onSubmit={onAddPost}/>\r\n\r\n            <div className={c.posts}>\r\n                {postsElements}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form action=\"\" onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name=\"newPostBody\"\r\n                    placeholder={\"add Post text here\"}\r\n                    validate={[ required, maxLength10 ]} />\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n    form: 'postAddMessageForm'\r\n})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport c from './MyPosts.module.css'\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        postNewTxt: state.profilePage.postNewTxt\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, {useEffect} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, setStatus, updateStatus} from \"../../redux/profile-reducer\";\r\n\r\nimport {\r\n    redirect,\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport LoginContainer from \"../Login/Login\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.isUserAuth = true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            // console.log(\"ddddddd\")\r\n            // console.log(this.props)\r\n            if (!userId) {\r\n                // console.log(userId)\r\n                userId = 30824;\r\n                // userId = 10101010101110;\r\n                this.isUserAuth = false;\r\n            }\r\n\r\n        }\r\n        // console.log(userId)\r\n        //debugger;\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        // console.log(\"RENDER PROFILE\")\r\n        if (this.isUserAuth) {\r\n            return <Profile\r\n                {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n\r\n            />\r\n        } else {\r\n            //return <div>not auth</div>\r\n            return <LoginContainer />\r\n        }\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log(\"mapStateToProps PROFILE\")\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userID,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n};\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsConrols_formControl__eFBBh\",\"error\":\"FormsConrols_error__ZlvlZ\"};","import React from 'react';\r\nimport styles from './FormsConrols.module.css'\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + ( hasError ? styles.error : \"\") }>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + ( hasError ? styles.error : \"\") }>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            component={component}\r\n            type=\"text\"\r\n            validate={validators}\r\n            {...props}\r\n        />{text}\r\n    </div>\r\n)","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLength30 = value => {\r\n    if (value.length > 30) return \"Max Length is 30 symblos\";\r\n    return undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    // console.log(maxLength, value.length);\r\n    if (value.length > maxLength) return `Max Length is ${maxLength} symblos`;\r\n    return undefined;\r\n}\r\n\r\n","import React, {Component} from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsToRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login/\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsToRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["LoginReduxForm","reduxForm","form","props","_jsxs","action","onSubmit","handleSubmit","children","createField","required","Input","type","_jsx","connect","state","isAuth","auth","login","Navigate","to","formData","email","password","rememberMe","React","editMode","setEditMode","useState","status","setStatus","useEffect","onDoubleClick","activateEditMode","autoFocus","onChange","e","currentTarget","value","onBlur","deactivateEditMode","updateStatus","_ref","profile","className","c","src","photos","small","alt","fullName","ProfileStatusWithHooks","Preloader","message","likesCount","maxLength10","maxLengthCreator","MyPosts","postsElements","postsData","reverse","map","p","Post","id","AddPostFormRedux","addPost","newPostBody","Field","component","Textarea","name","placeholder","validate","profilePage","postNewTxt","dispatch","addPostActionCreator","ProfileInfo","MyPostsContainer","ProfileContainer","constructor","super","this","isUserAuth","componentDidMount","userId","router","params","authorizedUserId","getUserProfile","getStatus","render","Profile","LoginContainer","compose","Component","location","useLocation","navigate","useNavigate","useParams","userID","input","meta","hasError","touched","error","styles","_ref2","validators","arguments","length","undefined","text","maxLength","concat","mapStateToPropsToRedirect","withAuthRedirect","RedirectComponent"],"sourceRoot":""}