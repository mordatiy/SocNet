{"version":3,"file":"static/js/670.184aac43.chunk.js","mappings":"8MASA,MAcMA,GAAiBC,EAAAA,EAAAA,GAAU,CAC7BC,KAAM,SADaD,EAdJE,IAEXC,EAAAA,EAAAA,MAAA,QAAMC,OAAO,GAAGC,SAAUH,EAAMI,aAAaC,SAAA,EACxCC,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAAEC,EAAAA,IAAYC,EAAAA,GAAO,CAACC,KAAM,QAAS,KACnEH,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAAEC,EAAAA,IAAYC,EAAAA,GAAO,CAACC,KAAM,YAAa,KAC7EH,EAAAA,EAAAA,IAAY,GAAI,aAAc,GAAIE,EAAAA,GAAO,CAACC,KAAM,YAAa,iBAC9DC,EAAAA,EAAAA,KAAA,OAAAL,UACIK,EAAAA,EAAAA,KAAA,UAAAL,SAAQ,iBAqCxB,MAIA,GAJuBM,EAAAA,EAAAA,KAPAC,IAEZ,CACHC,OAAQD,EAAME,KAAKD,UAIqB,CAACE,MAAK,MAA/BJ,EA1BRX,GAMPA,EAAMa,QACCH,EAAAA,EAAAA,KAACM,EAAAA,GAAQ,CAACC,GAAI,eAElBhB,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACHK,EAAAA,EAAAA,KAAA,MAAAL,SAAI,WACJK,EAAAA,EAAAA,KAACb,EAAc,CAACM,SAVFe,IAEdlB,EAAMe,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAW,Q,6DC7B3E,QAA8B,kCAA9B,EAAwE,4B,uBCIjE,MAAMC,EAAWC,IAA8B,IAA7B,MAACC,EAAK,KAAEC,KAASzB,GAAMuB,EAC5C,MAAMG,EAAWD,EAAKE,SAAWF,EAAKG,MAEtC,OACI3B,EAAAA,EAAAA,MAAA,OAAK4B,UAAWC,EAAqB,KAAQJ,EAAWI,EAAe,IAAKzB,SAAA,EACxEK,EAAAA,EAAAA,KAAA,OAAAL,UACIK,EAAAA,EAAAA,KAAA,eAAcc,KAAWxB,MAE3B0B,IAAYhB,EAAAA,EAAAA,KAAA,QAAAL,SAAOoB,EAAKG,UACxB,EAIDpB,EAAQuB,IAA8B,IAA7B,MAACP,EAAK,KAAEC,KAASzB,GAAM+B,EACzC,MAAML,EAAWD,EAAKE,SAAWF,EAAKG,MAEtC,OACI3B,EAAAA,EAAAA,MAAA,OAAK4B,UAAWC,EAAqB,KAAQJ,EAAWI,EAAe,IAAKzB,SAAA,EACxEK,EAAAA,EAAAA,KAAA,OAAAL,UACIK,EAAAA,EAAAA,KAAA,YAAWc,KAAWxB,MAExB0B,IAAYhB,EAAAA,EAAAA,KAAA,QAAAL,SAAOoB,EAAKG,UACxB,EAIDtB,EAAc,SAAC0B,EAAaC,EAAMC,EAAYC,GAAS,IAAEnC,EAAKoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OACvFnC,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIK,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CACFR,YAAaA,EACbC,KAAMA,EACNE,UAAWA,EACX1B,KAAK,OACLgC,SAAUP,KACNlC,IACLuC,IACD,C,4CCzCH,MAAMhC,EAAWmC,IACpB,IAAIA,EACJ,MAAO,mBAAmB,EAQjBC,EAAoBC,GAAeF,IAE5C,GAAIA,EAAML,OAASO,EAAW,MAAM,iBAANC,OAAwBD,EAAS,WAC/C,C","sources":["Components/Login/Login.jsx","webpack://my-app/./src/Components/common/FormsControls/FormsConrols.module.css?5f12","Components/common/FormsControls/FormsConrols.js","Components/utils/validators/validators.js"],"sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsConrols\";\r\nimport {required} from \"../utils/validators/validators\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form action=\"\" onSubmit={props.handleSubmit}>\r\n            {createField(\"Email\", \"email\", [ required ], Input, {type: \"text\"}, \"\")}\r\n            {createField(\"Password\", \"password\", [ required ], Input, {type: \"password\"}, \"\")}\r\n            {createField(\"\", \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me!\")}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        // console.log(\"formData: \", formData)\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n\r\n    }\r\n    if (props.isAuth) {\r\n        return <Navigate to={\"/profile/\"} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n\r\n}\r\n\r\n/* trash * /\r\n\r\n */\r\nlet mapStateToProps = (state) => {\r\n    // console.log('mapStateToProps')\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nconst LoginContainer = connect(mapStateToProps, {login})(Login)\r\n/* end trash * /\r\n */\r\n\r\nexport default LoginContainer;","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsConrols_formControl__eFBBh\",\"error\":\"FormsConrols_error__ZlvlZ\"};","import React from 'react';\r\nimport styles from './FormsConrols.module.css'\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + ( hasError ? styles.error : \"\") }>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + ( hasError ? styles.error : \"\") }>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            component={component}\r\n            type=\"text\"\r\n            validate={validators}\r\n            {...props}\r\n        />{text}\r\n    </div>\r\n)","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLength30 = value => {\r\n    if (value.length > 30) return \"Max Length is 30 symblos\";\r\n    return undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    // console.log(maxLength, value.length);\r\n    if (value.length > maxLength) return `Max Length is ${maxLength} symblos`;\r\n    return undefined;\r\n}\r\n\r\n"],"names":["LoginReduxForm","reduxForm","form","props","_jsxs","action","onSubmit","handleSubmit","children","createField","required","Input","type","_jsx","connect","state","isAuth","auth","login","Navigate","to","formData","email","password","rememberMe","Textarea","_ref","input","meta","hasError","touched","error","className","styles","_ref2","placeholder","name","validators","component","arguments","length","undefined","text","Field","validate","value","maxLengthCreator","maxLength","concat"],"sourceRoot":""}